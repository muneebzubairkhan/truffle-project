Last login: Sun Mar 27 07:07:42 on ttys002
mzk@mzk ~ % sol
zsh: command not found: sol
mzk@mzk ~ % PATH="/Users/mzk/.local/share/solana/install/active_release/bin:$PATH"
mzk@mzk ~ % solana
solana-cli 1.10.4 (src:df9f4193; feat:3235626988)
Blockchain, Rebuilt for Scale

USAGE:
    solana [FLAGS] [OPTIONS] <SUBCOMMAND>

FLAGS:
    -h, --help                           Prints help information
        --no-address-labels              Do not use address labels in the output
        --skip-seed-phrase-validation    Skip validation of seed phrases. Use this if your phrase does not use the BIP39
                                         official English word list
    -V, --version                        Prints version information
    -v, --verbose                        Show additional information

OPTIONS:
        --commitment <COMMITMENT_LEVEL>    Return information at the selected commitment level [possible values:
                                           processed, confirmed, finalized]
    -C, --config <FILEPATH>                Configuration file to use [default: /Users/mzk/.config/solana/cli/config.yml]
    -u, --url <URL_OR_MONIKER>             URL for Solana's JSON RPC or moniker (or their first letter): [mainnet-beta,
                                           testnet, devnet, localhost]
    -k, --keypair <KEYPAIR>                Filepath or URL to a keypair
        --output <FORMAT>                  Return information in specified output format [possible values: json, json-
                                           compact]
        --ws <URL>                         WebSocket URL for the solana cluster

SUBCOMMANDS:
    account                              Show the contents of an account
    address                              Get your public key
    airdrop                              Request SOL from a faucet
    authorize-nonce-account              Assign account authority to a new entity
    balance                              Get your balance
    block                                Get a confirmed block
    block-height                         Get current block height
    block-production                     Show information about block production
    block-time                           Get estimated production time of a block
    catchup                              Wait for a validator to catch up to the cluster
    close-vote-account                   Close a vote account and withdraw all funds remaining
    cluster-date                         Get current cluster date, computed from genesis creation time and network
                                         time
    cluster-version                      Get the version of the cluster entrypoint
    completion                           Generate completion scripts for various shells
    config                               Solana command-line tool configuration settings
    confirm                              Confirm transaction by signature
    create-address-with-seed             Generate a derived account address with a seed
    create-nonce-account                 Create a nonce account
    create-stake-account                 Create a stake account
    create-stake-account-checked         Create a stake account, checking the withdraw authority as a signer
    create-vote-account                  Create a vote account
    deactivate-stake                     Deactivate the delegated stake from the stake account
    decode-transaction                   Decode a serialized transaction
    delegate-stake                       Delegate stake to a vote account
    epoch                                Get current epoch
    epoch-info                           Get information about the current epoch
    feature                              Runtime feature management
    fees                                 Display current cluster fees (Deprecated in v1.8.0)
    first-available-block                Get the first available block in the storage
    genesis-hash                         Get the genesis hash
    gossip                               Show the current gossip network nodes
    help                                 Prints this message or the help of the given subcommand(s)
    inflation                            Show inflation information
    largest-accounts                     Get addresses of largest cluster accounts
    leader-schedule                      Display leader schedule
    live-slots                           Show information about the current slot progression
    logs                                 Stream transaction logs
    merge-stake                          Merges one stake account into another
    new-nonce                            Generate a new nonce, rendering the existing nonce useless
    nonce                                Get the current nonce value
    nonce-account                        Show the contents of a nonce account
    ping                                 Submit transactions sequentially
    program                              Program management
    rent                                 Calculate per-epoch and rent-exempt-minimum values for a given account data
                                         field length.
    resolve-signer                       Checks that a signer is valid, and returns its specific path; useful for
                                         signers that may be specified generally, eg. usb://ledger
    slot                                 Get current slot
    split-stake                          Duplicate a stake account, splitting the tokens between the two
    stake-account                        Show the contents of a stake account
    stake-authorize                      Authorize a new signing keypair for the given stake account
    stake-authorize-checked              Authorize a new signing keypair for the given stake account, checking the
                                         authority as a signer
    stake-history                        Show the stake history
    stake-set-lockup                     Set Lockup for the stake account
    stake-set-lockup-checked             Set Lockup for the stake account, checking the new authority as a signer
    stakes                               Show stake account information
    supply                               Get information about the cluster supply of SOL
    transaction-count                    Get current transaction count
    transaction-history                  Show historical transactions affecting the given address from newest to
                                         oldest
    transfer                             Transfer funds between system accounts
    validator-info                       Publish/get Validator info on Solana
    validators                           Show summary information about the current validators
    vote-account                         Show the contents of a vote account
    vote-authorize-voter                 Authorize a new vote signing keypair for the given vote account
    vote-authorize-voter-checked         Authorize a new vote signing keypair for the given vote account, checking
                                         the new authority as a signer
    vote-authorize-withdrawer            Authorize a new withdraw signing keypair for the given vote account
    vote-authorize-withdrawer-checked    Authorize a new withdraw signing keypair for the given vote account,
                                         checking the new authority as a signer
    vote-update-commission               Update the vote account's commission
    vote-update-validator                Update the vote account's validator identity
    wait-for-max-stake                   Wait for the max stake of any one node to drop below a percentage of total.
    withdraw-from-nonce-account          Withdraw SOL from the nonce account
    withdraw-from-vote-account           Withdraw lamports from a vote account into a specified account
    withdraw-stake                       Withdraw the unstaked SOL from the stake account
mzk@mzk ~ % curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh

info: downloading installer

Welcome to Rust!

This will download and install the official compiler for the Rust
programming language, and its package manager, Cargo.

Rustup metadata and toolchains will be installed into the Rustup
home directory, located at:

  /Users/mzk/.rustup

This can be modified with the RUSTUP_HOME environment variable.

The Cargo home directory located at:

  /Users/mzk/.cargo

This can be modified with the CARGO_HOME environment variable.

The cargo, rustc, rustup and other commands will be added to
Cargo's bin directory, located at:

  /Users/mzk/.cargo/bin

This path will then be added to your PATH environment variable by
modifying the profile files located at:

  /Users/mzk/.profile
  /Users/mzk/.zshenv

You can uninstall at any time with rustup self uninstall and
these changes will be reverted.

Current installation options:


   default host triple: x86_64-apple-darwin
     default toolchain: stable (default)
               profile: default
  modify PATH variable: yes

1) Proceed with installation (default)
2) Customize installation
3) Cancel installation
>1

info: profile set to 'default'
info: default host triple is x86_64-apple-darwin
warning: Updating existing toolchain, profile choice will be ignored
info: syncing channel updates for 'stable-x86_64-apple-darwin'
info: default toolchain set to 'stable-x86_64-apple-darwin'

  stable-x86_64-apple-darwin unchanged - rustc 1.59.0 (9d1b2106e 2022-02-23)


Rust is installed now. Great!

To get started you may need to restart your current shell.
This would reload your PATH environment variable to include
Cargo's bin directory ($HOME/.cargo/bin).

To configure your current shell, run:
source $HOME/.cargo/env
mzk@mzk ~ % source $HOME/.cargo/env
mzk@mzk ~ % source $HOME/.cargo/env
mzk@mzk ~ % sh -c "$(curl -sSfL https://release.solana.com/v1.10.4/install)"
downloading v1.10.4 installer
Install is up to date. 1.10.4 is the latest compatible release
mzk@mzk ~ % git clone https://github.com/solana-labs/example-helloworld           
Cloning into 'example-helloworld'...
remote: Enumerating objects: 1149, done.
remote: Counting objects: 100% (584/584), done.
remote: Compressing objects: 100% (190/190), done.
remote: Total 1149 (delta 514), reused 404 (delta 390), pack-reused 565
Receiving objects: 100% (1149/1149), 801.85 KiB | 3.03 MiB/s, done.
Resolving deltas: 100% (757/757), done.
mzk@mzk ~ % cd example-helloworld 
mzk@mzk example-helloworld % npm i  
npm WARN deprecated @types/yaml@1.9.7: This is a stub types definition. yaml provides its own type definitions, so you do not need this installed.

added 298 packages, and audited 299 packages in 5s

30 packages are looking for funding
  run `npm fund` for details

1 high severity vulnerability

To address all issues, run:
  npm audit fix

Run `npm audit` for details.
mzk@mzk example-helloworld % solana config set --url localhost
Config File: /Users/mzk/.config/solana/cli/config.yml
RPC URL: http://localhost:8899 
WebSocket URL: ws://localhost:8900/ (computed)
Keypair Path: /Users/mzk/.config/solana/id.json 
Commitment: confirmed 
mzk@mzk example-helloworld % sudo npm run build:program-rust 
Password:

> helloworld@0.0.1 build:program-rust
> cargo build-bpf --manifest-path=./src/program-rust/Cargo.toml --bpf-out-dir=dist/program

BPF SDK: /Users/mzk/.local/share/solana/install/releases/1.10.4/solana-release/bin/sdk/bpf
cargo-build-bpf child: rustup toolchain list -v
cargo-build-bpf child: cargo +bpf build --target bpfel-unknown-unknown --release
   Compiling proc-macro2 v1.0.27
   Compiling unicode-xid v0.2.2
   Compiling syn v1.0.73
   Compiling serde v1.0.136
   Compiling serde_derive v1.0.136
   Compiling version_check v0.9.3
   Compiling semver-parser v0.7.0
   Compiling typenum v1.13.0
   Compiling feature-probe v0.1.1
   Compiling block-padding v0.2.1
   Compiling autocfg v1.0.1
   Compiling opaque-debug v0.3.0
   Compiling cfg-if v1.0.0
   Compiling log v0.4.14
   Compiling rustversion v1.0.5
   Compiling once_cell v1.8.0
   Compiling bs58 v0.3.1
   Compiling spin v0.5.2
   Compiling keccak v0.1.0
   Compiling either v1.6.1
   Compiling hex v0.4.3
   Compiling semver v0.9.0
   Compiling bv v0.11.1
   Compiling generic-array v0.14.4
   Compiling ahash v0.7.6
   Compiling lazy_static v1.4.0
   Compiling itertools v0.9.0
   Compiling num-traits v0.2.14
   Compiling rustc_version v0.2.3
   Compiling solana-frozen-abi-macro v1.8.14
   Compiling solana-frozen-abi v1.8.14
   Compiling solana-program v1.8.14
   Compiling quote v1.0.9
   Compiling hashbrown v0.11.2
   Compiling borsh-derive-internal v0.9.3
   Compiling borsh-schema-derive-internal v0.9.3
   Compiling thiserror-impl v1.0.30
   Compiling bytemuck_derive v1.0.1
   Compiling num-derive v0.3.3
   Compiling solana-sdk-macro v1.8.14
   Compiling bytemuck v1.7.3
   Compiling thiserror v1.0.30
   Compiling serde_bytes v0.11.5
   Compiling bincode v1.3.3
   Compiling toml v0.5.8
   Compiling block-buffer v0.9.0
   Compiling digest v0.9.0
   Compiling sha2 v0.9.9
   Compiling sha3 v0.9.1
   Compiling proc-macro-crate v0.1.5
   Compiling borsh-derive v0.9.3
   Compiling borsh v0.9.3
   Compiling solana-bpf-helloworld v0.0.1 (/Users/mzk/example-helloworld/src/program-rust)
    Finished release [optimized] target(s) in 26.03s
cargo-build-bpf child: /Users/mzk/.local/share/solana/install/releases/1.10.4/solana-release/bin/sdk/bpf/scripts/strip.sh /Users/mzk/example-helloworld/src/program-rust/target/bpfel-unknown-unknown/release/helloworld.so /Users/mzk/example-helloworld/dist/program/helloworld.so
cargo-build-bpf child: /Users/mzk/.local/share/solana/install/releases/1.10.4/solana-release/bin/sdk/bpf/dependencies/bpf-tools/llvm/bin/llvm-readelf --dyn-symbols /Users/mzk/example-helloworld/dist/program/helloworld.so

To deploy this program:
  $ solana program deploy /Users/mzk/example-helloworld/dist/program/helloworld.so
The program address will default to this keypair (override with --program-id):
  /Users/mzk/example-helloworld/dist/program/helloworld-keypair.json
mzk@mzk example-helloworld % sudo solana program deploy dist/program/helloworld.so 
Error: RPC request error: cluster version query failed: error sending request for url (http://localhost:8899/): error trying to connect: tcp connect error: Connection refused (os error 61)
mzk@mzk example-helloworld % npm run start

> helloworld@0.0.1 start
> ts-node src/client/main.ts

Let's say hello to a Solana account...
FetchError: request to http://localhost:8899/ failed, reason: connect ECONNREFUSED 127.0.0.1:8899
    at ClientRequest.<anonymous> (/Users/mzk/example-helloworld/node_modules/node-fetch/lib/index.js:1491:11)
    at ClientRequest.emit (node:events:390:28)
    at ClientRequest.emit (node:domain:475:12)
    at Socket.socketErrorListener (node:_http_client:447:9)
    at Socket.emit (node:events:390:28)
    at Socket.emit (node:domain:475:12)
    at emitErrorNT (node:internal/streams/destroy:157:8)
    at emitErrorCloseNT (node:internal/streams/destroy:122:3)
    at processTicksAndRejections (node:internal/process/task_queues:83:21) {
  type: 'system',
  errno: 'ECONNREFUSED',
  code: 'ECONNREFUSED'
}
mzk@mzk example-helloworld % 
